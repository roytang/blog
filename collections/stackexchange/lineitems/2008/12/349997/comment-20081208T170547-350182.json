{"id": 350182, "name": "Argelbargel", "url": "https://stackoverflow.com/users/2992/argelbargel", "text": "The pipe symbols `|` in this case do not have the default meaning of \"match this or that\" but are use as alternative delimiters for the pattern instead of the more common slashes `/`. This may make sense, if you want to match for `/` without having to escape those appearances (e.g. `/(.\\*)\\/(.\\*)\\//` is not as readable as `#/(.\\*)/(.\\*)/#`). Seems quite contra productive to use `|` instead which is just another reserved char for patterns, though.\r\n\r\nNormally `$1` in the replacement pattern should match the first group denoted by parentheses. E.g if you've got a pattern like\r\n\r\n    \"(.*)<p>\"\r\n\r\n`$0` would contain the whole match and `$1` the part before the `&lt;p&gt;`.\r\n\r\nAs the given reg-ex does not declare any groups and `$1` is not a valid name for a variable (in PHP4) defined elsewhere, this call seems to replace any occurrences of `&lt;p&gt;` with `&lt;p&gt;`? \r\n\r\nTo be honest, now I'm also quite confused. Just a guess: gets another pattern-matching method (preg_match and the like) called before the given line so the `$1` is \"leaked\" from there?", "date": "2008-12-08 17:05:47", "photo": "https://www.gravatar.com/avatar/99dde0bf8629f21efdc31e70abb655fe?s=128&d=identicon&r=PG", "source_url": "https://stackoverflow.com/questions/349997/what-does-this-regular-expression-do", "mention_url": "https://stackoverflow.com/questions/349997/what-does-this-regular-expression-do", "source": "stackexchange"}