{"id": 350806, "name": "Scott Reynen", "url": "https://stackoverflow.com/users/10837/scott-reynen", "text": "I believe that line does nothing.\r\n\r\nFor what it's worth, this is the previous line, in which $1 is set:\r\n\r\n\t$pee = preg_replace('!<p>([^<]+)\\s*?(</(?:div|address|form)[^>]*>)!', \"<p>$1</p>$2\", $pee);\r\n\r\nHowever, I don't think that's worth anything. In my testing, $1 does not maintain a value from one preg\\_replace to the next, even if the next doesn't set its own value for $1. Remember that PHP variable names cannot begin with a number (see: http://php.net/language.variables ), so $1 is not a PHP variable. It only means something within a single preg\\_replace, and in this case the rules of preg\\_replace suggest it doesn't mean anything.\r\n\r\nThat said, autop being such a widely-used function makes me doubt my own conclusion that this line is doing nothing. So I look forward to someone correcting me.", "date": "2008-12-08 20:39:56", "photo": "https://www.gravatar.com/avatar/330555fba743b009765f9d38d7137e6f?s=128&d=identicon&r=PG", "source_url": "https://stackoverflow.com/questions/349997/what-does-this-regular-expression-do", "mention_url": "https://stackoverflow.com/questions/349997/what-does-this-regular-expression-do", "source": "stackexchange"}