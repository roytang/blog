{"id": 10418551, "name": "Skylar Saveland", "url": "https://stackoverflow.com/users/177293/skylar-saveland", "text": "You can decorate a request handler or other function with this and it will print the sql nicely formated with totals at the end.\r\n\r\n    from functools import wraps\r\n    from django.utils import termcolors\r\n    format_ok = termcolors.make_style(opts=('bold',), fg='green')\r\n    format_warning = termcolors.make_style(opts=('bold',), fg='yellow')\r\n    format_error = termcolors.make_style(opts=('bold',), fg='red')\r\n    \r\n    try:\r\n        from pygments import highlight\r\n        from pygments.lexers import SqlLexer\r\n        from pygments.formatters import TerminalFormatter\r\n        pygments_sql_lexer = SqlLexer()\r\n        pygments_terminal_formatter = TerminalFormatter()\r\n        highlight_sql = lambda s: highlight(s, pygments_sql_lexer,\r\n                                   pygments_terminal_formatter)\r\n    except ImportError:\r\n        highlight_sql = lambda s: s\r\n    \r\n    \r\n    def debug_sql(f):\r\n        \"\"\"\r\n        Turn SQL statement debugging on for a test run.\r\n        \"\"\"\r\n        @wraps(f)\r\n        def wrapper(*a, **kw):\r\n            from django.conf import settings\r\n            from django.db import connection\r\n            try:\r\n                debug = settings.DEBUG\r\n                settings.DEBUG = True\r\n                connection.queries = []\r\n                return f(*a, **kw)\r\n            finally:\r\n                total_time = 0\r\n                for q in connection.queries:\r\n                    fmt = format_ok\r\n                    t = float(q['time'])\r\n                    total_time += t\r\n                    if t > 1:\r\n                        fmt = format_error\r\n                    elif t > 0.3:\r\n                        fmt = format_warning\r\n                    print '[%s] %s' % (fmt(q['time']), highlight_sql(q['sql']))\r\n                print \"total time =\", total_time\r\n                print \"num queries =\", len(connection.queries)\r\n                settings.DEBUG = debug\r\n        return wrapper\r\n\r\n", "date": "2012-05-02 17:15:24", "photo": "https://www.gravatar.com/avatar/ae4384c9130c9b1707a15584f6b75333?s=128&d=identicon&r=PG", "source_url": "https://stackoverflow.com/questions/3727551/django-is-there-a-way-to-view-the-queries-being-executed-by-the-orm", "mention_url": "https://stackoverflow.com/questions/3727551/django-is-there-a-way-to-view-the-queries-being-executed-by-the-orm", "source": "stackexchange"}