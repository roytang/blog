{"id": 46265653, "name": "David Ennis", "url": "https://stackoverflow.com/users/3215485/david-ennis", "text": "You can find the existence of a JSON property in a document by using [cts.jsonPropertyScopeQuery()][1] and the second parameter set to [cts.trueQuery()][2]\r\n\r\nTo find the opposite, you can wrap that part of your query in `cts.notQuery()`\r\n\r\nExample:\r\n\r\n    cts.search(\r\n      cts.notQuery(\r\n        cts.jsonPropertyScopeQuery('summaryData', cts.trueQuery())\r\n      )\r\n    )\r\n\r\nExample inside of a larger query for clarity (or more confusion.. who knows.. :)\r\n\r\n    cts.search(\r\n      cts.andQuery([\r\n         cts.directoryQuery('/some/scoping/path/'), \r\n         cts.notQuery(\r\n            cts.jsonPropertyScopeQuery('myMissingElement', cts.trueQuery())\r\n         )\r\n     ])\r\n    )\r\n\r\nThis is somewhat explained in the [cts.elementQuery()][3] documentation.\r\n\r\nLastly: one may argue that this is a duplicate of https://stackoverflow.com/questions/46076264/need-xquery-syntax-for-if-exists-behaviour-in-search-api  I was going to mark it as a duplicate, but did not because you asked about SJS, a property and to negate the search. Someone else may differ in opinion and mark it as duplicate.\r\n\r\n\r\n  [1]: https://docs.marklogic.com/jsonPropertyScopeQuery\r\n  [2]: https://docs.marklogic.com/cts.trueQuery\r\n  [3]: https://docs.marklogic.com/cts.elementQuery", "date": "2017-09-17 15:16:32", "photo": "https://i.stack.imgur.com/S7pAV.jpg?s=128&g=1", "source_url": "https://stackoverflow.com/questions/46263980/marklogic-query-for-documents-where-a-specific-json-property-is-not-defined", "mention_url": "https://stackoverflow.com/questions/46263980/marklogic-query-for-documents-where-a-specific-json-property-is-not-defined", "source": "stackexchange"}