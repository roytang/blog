{
  "id": "127e3cc7-f5bf-4eee-8028-ec7dfbb6f2b7",
  "name": "hungryroy",
  "url": "https://www.reddit.com/u/hungryroy",
  "text": "I've technical interviewed a lot of entry-level/junior level devs. Honestly any kind of project would probably be okay, as long as you're able to explain what role you played, bonus points if you're able to discuss technical decisions you made (why was this choice made, and why not this other one etc) or specific technical challenges you were able to overcome. That kind of stuff. Really, if you can demonstrate that you really worked on a project (and not just coasted by on teammates help etc), you're already an above average interview. \n\nEntry-level candidates might have more trouble since they often won't have a portfolio, but the quality of candidates is a bit low locally, so if you can demonstrably do simple stuff like loops, recursion, stacks, etc you're probably already an above average interview. Bigger companies will have written exams to filter out peeps who can't do that though.\n\nMore random technical interviewing tips, even though you didn't ask for that: being able to communicate well is a big plus, mandatory even. Lack of confidence makes the interviewer worry that you don't really know what you're talking about. Sometimes I'll slip in something I know to be wrong \"Diba pag cinall mo yan, ganito mangyayari?\", and see how the candidate reacts",
  "date": "2019-02-18 06:02:10",
  "photo": null,
  "source_url": "https://www.reddit.com/r/Philippines/comments/arsxjg/afternoon_random_discussion_feb_18_2019/egpp97c/",
  "reply_to": "https://www.reddit.com/r/Philippines/comments/arsxjg/afternoon_random_discussion_feb_18_2019/egpolbt/"
}